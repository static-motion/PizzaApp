@using PizzaApp.Web.ViewModels.ShoppingCart
@model ICollection<PizzaShoppingCartViewModel>

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <h1 class="mb-4">Your Pizza Cart</h1>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">
            Your cart is empty. <a asp-controller="Menu" asp-action="Index" class="alert-link">Browse our menu</a> to add delicious pizzas!
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-8">
                @foreach (var pizza in Model)
                {
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <h4 class="mb-0">@pizza.Name</h4>
                                <span class="badge bg-primary">Qty: @pizza.Quantity</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row mb-2">
                                <div class="col-md-6">
                                    <p><strong>Dough:</strong> @pizza.DoughName</p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong>Sauce:</strong> @(pizza.SauceName ?? "No sauce")</p>
                                </div>
                            </div>

                            @if (pizza.Toppings.Any())
                            {
                                <h5 class="mt-3">Toppings:</h5>
                                @foreach (string category in pizza.Toppings.Keys)
                                {
                                    <div class="mb-2">
                                        <h6 class="text-muted">@category</h6>
                                        <ul class="list-group list-group-flush">
                                            @foreach (ToppingViewModel topping in pizza.Toppings[category])
                                            {
                                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                                    <span>@topping.Name</span>
                                                    <span class="badge bg-secondary rounded-pill">+@topping.Price.ToString("C")</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                    
                                }
                            }

                            <div class="d-flex justify-content-end mt-3">
                                <h5>Price: @((pizza.Price * pizza.Quantity).ToString("C"))</h5>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <button class="btn btn-outline-primary btn-sm">Edit</button>
                                    <button class="btn btn-outline-danger btn-sm ms-2">Remove</button>
                                </div>
                                <div>
                                    <div class="input-group" style="width: 120px;">
                                        <button class="btn btn-outline-secondary btn-sm" type="button">-</button>
                                        <input type="text" class="form-control form-control-sm text-center" value="@pizza.Quantity" readonly>
                                        <button class="btn btn-outline-secondary btn-sm" type="button">+</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header bg-light">
                        <h4 class="mb-0">Order Summary</h4>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>@Model.Sum(p => p.Price * p.Quantity).ToString("C")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Delivery Fee:</span>
                            <span>$2.99</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total:</span>
                            <span>@((Model.Sum(p => p.Price * p.Quantity) + 2.99m).ToString("C"))</span>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary w-100">Proceed to Checkout</button>
                        <a asp-controller="Menu" asp-action="Index" class="btn btn-outline-secondary w-100 mt-2">Continue Shopping</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>